{"ts":1341058602500,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Read dropbox key and secret from the command line.\nvar consumer_key = process.argv[2]\n  , consumer_secret = process.argv[3];\n\nif (consumer_key == undefined || consumer_secret == undefined) {\n  console.log(\"Usage: node app.js <dropbox key> <dropbox secret>\");\n  process.exit(1);\n}\n\nvar sys = require('sys')\n  , DropboxClient = require('../../lib/dropbox-node').DropboxClient\n  ,  express = require('express')\n  ,  app = express.createServer();\n\n// Create and configure an Express server.\nvar app = express.createServer();\napp.configure(function () {\n  app.use(express.static(__dirname + '/public'))\n  , app.use(express.logger())\n  , app.use(express.bodyParser())\n  , app.use(express.cookieParser())\n  , app.use(express.session({ secret: '1ts-s3cr3t!'} ));\n});\n\n// Login page.\napp.get('/', function (req, res) {\n  res.render('login.jade', {\n    locals: {\n      title: 'Dropbox File Browser'\n    }\n  });\n});\n\n// Dropbox credential processing.\napp.post('/process_creds', function (req, res) {\n  // Create a DropboxClient and initialize it with an access token pair.\n  var dropbox = new DropboxClient(consumer_key, consumer_secret);\n  \n  dropbox.getAccessToken(req.body.email,\n                         req.body.password,\n                         function (err, token, secret) {\n    req.session.access_token = token;\n    req.session.access_token_secret = secret;\n    console.log(req.body.email)\n    res.redirect('/file_browser');\n  });\n});\n\n// File browser page.\napp.get('/file_browser(/*)?', function (req, res) {\n  // Fetch target metadata and render the page.\n  if (req.session.access_token && req.session.access_token_secret) {\n    var dropbox = new DropboxClient(consumer_key,\n                                    consumer_secret,\n                                    req.session.access_token,\n                                    req.session.access_token_secret);\n    dropbox.getMetadata(req.params[1] || '', function (err, metadata) {\n      if (err) return console.log('Error: ' + sys.inspect(err));\n      res.render('file_browser.jade', {\n\tlocals: {\n\t  title: 'Dropbox File Browser'\n\t  , current_dir: (metadata.path.length > 0) ? metadata.path : 'root'\n\t  , items: metadata.contents\n\t}\n      });\n    });\n  } else res.redirect('home');\n});\n\napp.listen(process.env.PORT || 3000);\nconsole.log(\"Express server listening on port %d in %s mode\", app.address().port, app.settings.env);\nconsole.log('Dropbox browser running on port ' + app.address().port);\n"]],"start1":0,"start2":0,"length1":0,"length2":2451}]],"length":2451}
