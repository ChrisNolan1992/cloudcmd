{"ts":1342076681908,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1342252151794,"patch":[[{"diffs":[[1,"/* Module contains Cloud Commander SS(Server Side) objects.\r\n *\r\n * List of objects:\r\n * - Cache\r\n * - Minify\r\n */\r\n\r\n\r\n/* \r\n * Обьект для работы с кэшем\r\n * аналог клиентского обьекта\r\n * с тем отличием, что в нём\r\n * будут храниться серверные\r\n * данные, такие как файлы\r\n * отдаваемые клиенту\r\n * (файлы проэкта по большому\r\n * счёту, для ускорения\r\n * первичной загрузки)\r\n */\r\nexports.Cache={\r\n    /* приватный переключатель возможности работы с кэшем */\r\n    _allowed            :true,\r\n    /* данные в которых храняться файлы \r\n     * в формате <поле> : <значение>\r\n     * _data[name]=pData;\r\n     * одному имени соответствуют \r\n     * одни данные\r\n     */\r\n    _data               :{},\r\n    \r\n    /* функция говорит можно ли работать с кэшем */\r\n    isAllowed           :(function(){\r\n        return this._allowed;\r\n        }),\r\n    /* функция устанавливает возможность работать с кэшем */\r\n    setAllowed          :(function(pAllowed){\r\n        this._allowed=pAllowed;\r\n    }),\r\n    /* Если доступен кэш\r\n     * сохраняем в него данные\r\n     */\r\n    set                  :(function(pName, pData){\r\n        if(this._allowed && pName && pData){\r\n            this._data[pName]=pData;\r\n        }\r\n    }),\r\n    /* Если доступен Cache принимаем из него данные*/\r\n    get                 :(function(pName){\r\n        if(this._allowed && pName){\r\n            return this._data[pName];\r\n        }\r\n        else return null;\r\n    }),\r\n    \r\n    /* Функция очищает кэш*/\r\n    clear               :(function(){\r\n        if(this._allowed){\r\n            this._data={};\r\n        }\r\n    })\r\n};\r\n\r\n/* Обьект для сжатия скриптов и стилей\r\n * по умолчанию - сжимаються\r\n */\r\nexports.Minify={\r\n    /* pathes to directories */\r\n    CSSDIR          :'./css',\r\n    INDEX           :'index.html',   \r\n    /* приватный переключатель минимизации */\r\n    _allowed               :{css:true,js:true,html:true, img: true},\r\n    \r\n    /* функция разрешает или \r\n     * запрещает минимизировать\r\n     * css/js/html\r\n     * @pAllowed: - структура, в которой\r\n     *              передаються параметры\r\n     *              минификации, вида\r\n     *              {js:true,css:true,html:false; img:true}\r\n     * img отвечает за перевод картинок в base64\r\n     * и сохранение их в css-файл\r\n     */\r\n    setAllowed              :(function(pAllowed){\r\n       if(pAllowed){\r\n           this._allowed.css=pAllowed.css; \r\n           this._allowed.js=pAllowed.js; \r\n           this._allowed.html=pAllowed.html; \r\n           this._allowed.img=pAllowed.img; \r\n       }\r\n    }),\r\n        \r\n    /*\r\n     * Функция минимизирует css/js/html\r\n     * если установлены параметры минимизации\r\n     */\r\n    doit                    :(function(){\r\n        if(this._allowed.css ||\r\n            this._allowed.js ||\r\n            this._allowed.html){\r\n                var lMinify;\r\n                try{\r\n                    lMinify      = require('minify');\r\n                }catch(pError){\r\n                    return console.log('Could not minify'   +\r\n                        'withou minify module\\n'            +\r\n                        'for fixing type:\\n'                +\r\n                        'git submodule init\\n'              +\r\n                        'git submodule update\\n'            +\r\n                        'or\\n'                              +\r\n                        'npm i minify');\r\n                }\r\n                /*\r\n                 * temporary changed dir path,\r\n                 * becouse directory lib is write\r\n                 * protected by others by default\r\n                 * so if node process is started\r\n                 * from other user (root for example\r\n                 * in nodester) we can not write\r\n                 * minified versions\r\n                 */\r\n                this.MinFolder = '/' + lMinify.MinFolder;\r\n                var lMinFolder=this.MinFolder;\r\n                \r\n                /* post processing function for file\r\n                 * client.js\r\n                 */\r\n                \r\n                /* если мы сжимаем client.js -\r\n                 * меняем строку cloudfunc.js на\r\n                 * cloudfunc.min.js и выводим сообщение\r\n                 *\r\n                 * меняем строку keyBinding.js на\r\n                 * keyBinding.min.js\r\n                 * если другой файл - ничего не деалем\r\n                 */             \r\n                var lPostProcessing_f = function(pFinalCode){\r\n                    console.log('file name of ' +\r\n                        'cloudfunc.js'          +\r\n                        ' in '                  +\r\n                        'client.js'             +\r\n                        ' changed. size:',\r\n                    (pFinalCode = pFinalCode\r\n                        .replace('cloudfunc.js','cloudfunc.min.js')\r\n                            .replace('keyBinding.js','keyBinding.min.js')\r\n                                .replace('/lib/', lMinFolder)\r\n                                    .replace('/lib/client/',\r\n                                        lMinFolder)).length);\r\n                    return pFinalCode;\r\n                };\r\n                \r\n                this.done.js=this._allowed.js?\r\n                    lMinify.jsScripts([{\r\n                        'client.js': lPostProcessing_f},\r\n                        'lib/cloudfunc.js',\r\n                        'lib/client/keyBinding.js'],\r\n                        true)\r\n                :false;\r\n                                                                \r\n                this.done.html=this._allowed.html?\r\n                    lMinify.html(this.INDEX):false;\r\n                \r\n                this.done.css=this._allowed.css?\r\n                    lMinify.cssStyles([this.CSSDIR + '/style.css',\r\n                        this.CSSDIR + '/reset.css'],\r\n                        this._allowed.img):false;\r\n                        \r\n                this.Cache = lMinify.Cache;\r\n        }\r\n    }),\r\n    /* свойство показывающее случилась ли ошибка*/\r\n    done:{js: false,css: false, html:false},\r\n    \r\n    /* minification folder name */\r\n    MinFolder   :'',\r\n    Cache       :{}\r\n};"]],"start1":0,"start2":0,"length1":0,"length2":6123}]],"length":6123,"saved":false}
{"ts":1342252524044,"patch":[[{"diffs":[[0,"ify."],[-1,"jsScripts"],[1,"optimize"],[0,"([{\r"]],"start1":5204,"start2":5204,"length1":17,"length2":16}]],"length":6122,"saved":false}
